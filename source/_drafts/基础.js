// 1,斐波那契数列的实现函数
// 2,事件委托(e.currentTarget和e.target的区别)
// 3,求交集: 除了用循环的方法
// const a = [1, 4, 6, 10, 2];
// const b = [1, 6, 0, 56];
// 4,存在两个数组,arr1和arr2,他们中的每一项满足 a1 <=a2,求这两个数组的并集(按照从大到小排列,并且已去重),
const arr1 = [1, 2, 3, 6, 9, 12, 15, 16, 19];
const arr2 = [1, 5, 7, 9, 10, 24];
// 思路考虑: 1,两个数组相等的情况;2,来两个数组长度不一样问题

let arr = [];
for (let i = 0, j = 0; i < arr1.length; j < arr2.length) {
    if(arr1[i] < arr2[j]){
        arr.push(arr1[i])
        i++;
    } else if(arr1[i] > arr2[j]) {
        arr.push(arr2[j])
        j++;
    } else {
        arr.push(arr2[j])
        i++;
        j++;
    }
    if( i === arr1.length) {
        // 直接把arr2剩下的直接push到数组后面
        for(let k = j; k< arr2.length; k++) {
            arr.push(arr2[k]);
        }
    }
    if( j === arr2.length) {
        // 直接把arr1剩下的直接push到数组后面
        for(let x = i; x< arr1.length; x++) {
            arr.push(arr1[x]);
        }
    }
}
console.log(arr);
// 5,写一个登录需求,需要知道什么: 跨域,是需要直接跳转页面还是弹出弹框,(ajax和form表单的区别),
// 已经实现该功能,但是线上代码出现一个问题,有人点击登录后无反应,怎么找问题,打断点之后发现
// (1),请求已发送,返回的信息都正常,就是没有弹窗;(2),请求没有发送,怎么找原因,(3),代码执行时才发现错误,(4)线上代码怎么部署
// 总结就是:每出现一个需求的时候不要着急去写代码,而要把需求跟产品明确,化流程图
// 6,实现一个需求两个接口返回a和b,那个先返回回来就返回哪个
// 7,实现一个简单的聊天,一点进来页面就进入到这个聊天室(重点是没有登录注册,怎么区分每个人,我答的是可以通过ip,还有别的方法么)